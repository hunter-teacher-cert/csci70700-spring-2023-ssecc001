section .text
global _start ;must be declared for using gcc
_start: ;tell linker entry point
;move the data from memory into registers

mov eax, [num1]
mov ebx, [num2]
mov ecx, [num3]

; add the data and store to register A
add eax, ebx
add eax, ecx
add eax, '0' ;comvets from number to ASCII value
;storing the result back into the result variable
mov [result], eax

;printing the message
mov edx, len ;message length
mov ecx, msg ;message to write
mov ebx, 1 ;file descriptor (stdout)
mov eax, 4 ;system call number (sys_write)
int 0x80 ;call kernel

;printing the message result
mov edx, 1 ;message length
mov ecx, result ;message to write
mov ebx, 1 ;file descriptor (stdout)
mov eax, 4 ;system call number (sys_write)
int 0x80 ;call kernel
mov eax, 1 ;system call number (sys_exit)
int 0x80 ;call kernel

section .data

msg db 'The sum is ',0xa ;our dear string
len equ $ - msg ;length of our dear string
num1 db 2
num2 db 4
num3 db 3

section .bss
result resb 1
